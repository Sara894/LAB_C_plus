/* Задание 2. Решить задачу по вариантам:
8 .Характеристикой столбца матрицы назовем произведение
 элементов с четными номерами строк.
 Определить номер столбца с наибольшей характеристикой. */

#include <iostream>
#include <ctime>
#include <stdlib.h>
#include <cstdlib>
using namespace std;

int main()
{
    //задаем максимальное допустимое количество строк и столбцов
    const int MAX_ROW_COUNT = 100;
    const int MAX_COL_COUNT = 100;
    //задаем массив arr
    int arr[MAX_ROW_COUNT][MAX_COL_COUNT];
    //определяем переменные для количества строк и столбцов
    //начальных строк ис толбцов
    //которые реально используются
    //для хранения элементов в массиве arr
    int nRows, nCols;
    srand(time(NULL));
    //вводим размеры матриц (количество строк и столбцов)
    cout << "Enter matrix sizes" << endl;
    cout << "  rows count : ";
    cin >> nRows;
    cout << " cols count : " << endl;
    cin >> nCols;
    cout << "Enter matrix : " << endl;
    for (int i = 0; i < nRows ; i++){

        for (int j = 0; j<nCols ; j++)
             cin>> arr[i][j];
           // arr[i][j] = rand()%100;
    }

      for (int i = 0; i<nRows; i++){
        for (int j = 0; j<nCols; j++)
         cout<<"STR "<<i<<" STB  "<<j<<"   "<<arr[i][j]<<endl;
    }
    // определяем переменные необходимые для вычислений
    // текущий индекс стобца с самой большой характеристикой
    int maxColIndex = 0;
    // значение характеристики
    int maxCount = 0;
    int j;// номер столбца в цикле
    int i;// номер строки в цикле
    // внешний цикл перебирает все индексы столбцов матрицы
    for (int j = 0; j<nCols; j++)
    {
        // данная переменная используется для подсчета характеристики
        // в очередном i-oм стролбце 
        int Count = 1;
        // пробегаемся по всем элементам i-ого стролбца для этого
        // i принимает во вложенном цикле все возможные индексы строк
        for(int i = 0; i<nRows; i+=2)
              // на очередной элемент четной строки умножаем 
           {
               cout <<" stolbec  "<<j<<"  stroka "<< i<<" element "<<arr[i][j]<<endl;
               Count*=arr[i][j];
            } 
        //если характеристика в текущем стролбце превышает дефолтную характеристику то
        if (Count > maxCount)
        {
            //сохраняем характеристику текущего столбца как максимальную
            maxCount = Count;
            maxColIndex = j;//и номер стоблца запоминаем 
        }
    }

    //Выводим на экран какая строка содержит максимальное количество нулей.
	cout << "Столбец под номером " << maxColIndex << " с самой большой характеристикой, равной " << maxCount << endl;
	return 0;
}
