/* Вариант 8
Анкета для опроса населения содержит две группы вопросов. Первая группа содержит сведения о респонденте:
o	возраст;
o	пол;
o	образование (начальное,	среднее, высшее).
Вторая группа содержит собственно вопрос анкеты, ответом на который может являться либо ДА, либо НЕТ.
Написать программу, которая:
o	обеспечивает начальный ввод анкет и формирует из них стека или очереди;
o	на основе анализа анкет выдает ответы на следующие вопросы:
    а) сколько мужчин старше 40 лет, имеющих высшее образование, ответили ДА на вопрос анкеты;
    б) сколько женщин моложе 30 лет, имеющих среднее образование, ответили НЕТ на вопрос анкеты;
    в) сколько мужчин моложе 25 лет, имеющих начальное образование, ответили ДА на вопрос анкеты;
o	производит вывод всех анкет и ответов на вопросы.
Программа должна обеспечивать диалог с помощью меню и контроль ошибок при вводе. */

#include <iostream>
#include <stack>
#include <vector>
#include <new>

using namespace std;

/* Вариант 8
Анкета для опроса населения содержит две группы вопросов. Первая группа содержит сведения о респонденте:
o	возраст;
o	пол;
o	образование (начальное,	среднее, высшее).
Вторая группа содержит собственно вопрос анкеты, ответом на который может являться либо ДА, либо НЕТ.
Написать программу, которая:
o	обеспечивает начальный ввод анкет и формирует из них стека или очереди;
o	на основе анализа анкет выдает ответы на следующие вопросы:
    а) сколько мужчин старше 40 лет, имеющих высшее образование, ответили ДА на вопрос анкеты;
    б) сколько женщин моложе 30 лет, имеющих среднее образование, ответили НЕТ на вопрос анкеты;
    в) сколько мужчин моложе 25 лет, имеющих начальное образование, ответили ДА на вопрос анкеты;
o	производит вывод всех анкет и ответов на вопросы.
Программа должна обеспечивать диалог с помощью меню и контроль ошибок при вводе. */

struct man
{
    int age;
    int edu;
    int pol;
    int que;
};

void userInput(stack<man> &st);

void viewMan(stack<man> st)
{
    int stackSize = st.size();
    for (int i = 0; i < stackSize; ++i)
    {
        man f = st.top();
        cout << " Возраст: " << f.age << endl;
        switch (f.edu)
        {
        case 1:
            cout << " Начальное образование. ";
            break;
        case 2:
            cout << " Среднее образование. ";
            break;
        case 3:
            cout << " Высшее образование. ";
            break;
        }
        switch (f.pol)
        {
        case 1:
            cout << " Мужчина. ";
            break;
        case 0:
            cout << " Женщина. ";
            break;
        }
        switch (f.que)
        {
        case 1:
            cout << " Да. ";
            break;
        case 0:
            cout << " Нет. ";
            break;
        }

        st.pop();
    }
}

void viewAllMans(stack<man> st)
{
    int stackSize = st.size();
    for (int i = 0; i < stackSize; ++i)
    {
        man f = st.top();
        cout << "________________________" << endl;
        cout << " Возраст: " << f.age;
        switch (f.edu)
        {
        case 1:
            cout << " Начальное образование. ";
            break;
        case 2:
            cout << " Среднее образование. ";
            break;
        case 3:
            cout << " Высшее образование. ";
            break;
        }
        switch (f.pol)
        {
        case 1:
            cout << " Мужчина. ";
            break;
        case 0:
            cout << " Женщина. ";
            break;
        }
        switch (f.que)
        {
        case 1:
            cout << " Да. ";
            break;
        case 0:
            cout << " Нет. ";
            break;
        }
        st.pop();
    }
}

void inputMan(stack<man> &st)
{
    man f;
    cout << "Введите возраст: ";
    cin >> f.age;
    cout << "Образование 1 - начальное 2 - среднее 3 - высшее: ";
    cin >> f.edu;
    cout << "Пол 0- Ж 1-М: ";
    cin >> f.pol;
    cout << "Да - 1 Нет - 0: ";
    cin >> f.que;
    st.push(f);
}

void removeFile(stack<man> &st)
{
    st.pop();
    cout << "Вы удалили последнюю анкету!" << endl;
}

int menu()
{
    int choice;
    do
    {
        cout << "______________________________________________" << endl;
        cout << "Выберите действие: 1 - добавить анкету \t \
          2 - узнать статистику по исследованиям \n 3 - вывести всех \n 4 - выход "
             << endl;
        cout << "______________________________________________" << endl;
        cin >> choice;
    } while (!choice);

    return choice;
}
int statistic(stack<man> st, int age, int edu, int pol, int que, int name)
{
    man f = st.top();
    int count = 0;
    while (!st.empty())
    {
        switch (name)
        {
        case 1:
          {
                if ((f.age >= age) && (f.edu >= edu) && (f.pol == pol) && (f.que == que))
                count++;
            break; //старше
          }
        case 0:
           {
                if ((f.age <= age) && (f.edu >= edu) && (f.pol == pol) && (f.que == que))
                count++;
            break; // младше
           }
        default:
            cout << " Hello" << endl;
        }
        st.pop();
    }
    return count;
}

void printAnketa(stack<man> st)
{
    //сколько мужчин старше 40 лет, имеющих высшее образование, ответили ДА на вопрос анкеты;
    int countMen40 = statistic(st, 40, 3, 1, 1, 1); // код 1 - значит поиск по возрасту "старше"
    cout << "сколько мужчин старше 40 лет, имеющих высшее образование, ответили ДА : " << countMen40 << endl;
    //сколько женщин моложе 30 лет, имеющих среднее образование, ответили НЕТ на вопрос анкеты;
    int countWoman30 = statistic(st, 30, 2, 0, 0, 0);
    cout << "сколько женщин моложе 30 лет, имеющих среднее образование, ответили НЕТ : " << countWoman30 << endl;
    //сколько мужчин моложе 25 лет, имеющих начальное образование, ответили ДА на вопрос анкеты;
    int countMen25 = statistic(st, 25, 1, 1, 1, 0);
    cout << "мужчин моложе 25 лет, имеющих начальное образование, ответили ДА :  " << countMen25 << endl;
}

int main()
{
    stack<man> st;
    while (true)
    {
        switch (menu())
        {
        case 1:
            inputMan(st);
            break;
        case 2:
            printAnketa(st);
            break;
        case 3:
            viewAllMans(st);
            break;
        case 4:
            return 0;
            break;
        }
    }
}
